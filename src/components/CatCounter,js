
const CatCounter = ({stroke = "#000", count = 1}) => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="80"
    height="80"
    fill="none"
    viewBox="0 0 350 350"
  >
    <path
      stroke={stroke}
      strokeWidth="15"
      d="M75.284 99.865s-7.9-55.184 15.5-58.5c11.801-1.673 26.816 10.521 31.522 14.659.949.834 2.193 1.22 3.441 1.02 8.197-1.317 40.277-6.232 62.036-6.18 21.258.052 52.588 4.892 60.587 6.186 1.219.197 2.443-.171 3.387-.969 5.023-4.248 21.868-17.43 34.526-14.716 22.222 4.762 17.5 55.5 17.5 55.5M46.55 161s-17.013 82 138.078 82c168.094 0 147.583-82 147.583-82"
    ></path>
    <path
      fill={stroke}
      d="M338.5 165.112c.049-1.796-1.049-3.657-2.447-5.286-2.067-2.41-5.552-.624-5.552 2.551v32.061s8.131-5.293 7.999-10.112c-.054-1.944-1.455-3.938-3.07-5.603-2.053-2.114-2.053-5.894 0-8.008 1.615-1.664 3.016-3.659 3.07-5.603"
    ></path>
    <path
      stroke={stroke}
      strokeWidth="10"
      d="M330.501 194.438s8.131-5.293 7.999-10.112c-.054-1.944-1.455-3.938-3.07-5.603-2.053-2.114-2.053-5.894 0-8.008 1.615-1.664 3.016-3.659 3.07-5.603.049-1.796-1.049-3.657-2.447-5.286-2.067-2.41-5.552-.624-5.552 2.551v32.061Zm0 0-1.951 2.714c-.856 1.189-.006 2.848 1.46 2.848a1.798 1.798 0 0 0 1.761-2.16l-.699-3.402"
    ></path>
    <path
      fill={stroke}
      d="M40.002 165.112c-.05-1.796 1.049-3.657 2.446-5.286 2.067-2.41 5.553-.624 5.553 2.551v32.061s-8.132-5.293-8-10.112c.054-1.944 1.456-3.938 3.07-5.603 2.053-2.114 2.053-5.894 0-8.008-1.614-1.664-3.016-3.659-3.07-5.603"
    ></path>
    <path
      stroke={stroke}
      strokeWidth="10"
      d="M48 194.438s-8.13-5.293-7.998-10.112c.053-1.944 1.454-3.938 3.07-5.603 2.052-2.114 2.052-5.894 0-8.008-1.616-1.664-3.017-3.659-3.07-5.603-.05-1.796 1.049-3.657 2.446-5.286 2.067-2.41 5.553-.624 5.553 2.551v32.061Zm0 0 1.952 2.714c.855 1.189.005 2.848-1.46 2.848a1.798 1.798 0 0 1-1.762-2.16l.7-3.402"
    ></path>
    <text x="180" y="150" dominantBaseline="middle" textAnchor="middle">
      {count}
    </text>
  </svg>
);

export default CatCounter;
